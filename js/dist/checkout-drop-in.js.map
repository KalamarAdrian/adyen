{"version":3,"sources":["../src/checkout-drop-in.js"],"names":["checkout","AdyenCheckout","pronamicPayAdyenCheckout","configuration","dropin","create","paymentMethodsConfiguration","applepay","merchantName","merchantIdentifier","onValidateMerchant","resolve","reject","validationURL","paywithgoogle","environment","gatewayMerchantId","card","hasHolderName","holderNameRequired","enableStoreDetails","hideCVC","name","boletobancario","personalDetailsRequired","billingAddressRequired","showEmailAddress","data","socialSecurityNumber","shopperName","firstName","lastName","billingAddress","street","houseNumberOrName","city","postalCode","stateOrProvince","country","shopperEmail","onSubmit","state","makePayment","then","response","console","log","error","alert","action","handleAction","resultCode","setStatus","message","catch","Error","onAdditionalDetails","makeDetailsCall","mount","fetch","paymentsUrl","method","cache","headers","body","JSON","stringify","json"],"mappings":"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","sourcesContent":["const checkout = new AdyenCheckout( pronamicPayAdyenCheckout.configuration );\n\nconst dropin = checkout.create( 'dropin', {\n\tpaymentMethodsConfiguration: {\n\t\tapplepay: { // Example required configuration for Apple Pay\n\t\t\tconfiguration: {\n\t\t\t\tmerchantName: 'Adyen Test merchant', // Name to be displayed on the form\n\t\t\t\tmerchantIdentifier: 'adyen.test.merchant' // Your Apple merchant identifier as described in https://developer.apple.com/documentation/apple_pay_on_the_web/applepayrequest/2951611-merchantidentifier\n\t\t\t},\n\t\t\tonValidateMerchant: ( resolve, reject, validationURL ) => {\n\t\t\t\t// Call the validation endpoint with validationURL.\n\t\t\t\t// Call resolve(MERCHANTSESSION) or reject() to complete merchant validation.\n\t\t\t}\n\t\t},\n\t\tpaywithgoogle: { // Example required configuration for Google Pay\n\t\t\tenvironment: 'TEST', // Change this to PRODUCTION when you're ready to accept live Google Pay payments\n\t\t\tconfiguration: {\n\t\t\t\tgatewayMerchantId: 'YourCompanyOrMerchantAccount', // Your Adyen merchant or company account name. Remove this field in TEST.\n\t\t\t\tmerchantIdentifier: '12345678910111213141' // Required for PRODUCTION. Remove this field in TEST. Your Google Merchant ID as described in https://developers.google.com/pay/api/web/guides/test-and-deploy/deploy-production-environment#obtain-your-merchantID\n\t\t\t}\n\t\t},\n\t\tcard: { // Example optional configuration for Cards\n\t\t\thasHolderName: true,\n\t\t\tholderNameRequired: true,\n\t\t\tenableStoreDetails: true,\n\t\t\thideCVC: false, // Change this to true to hide the CVC field for stored cards\n\t\t\tname: 'Credit or debit card'\n\t\t},\n\t\tboletobancario: { // Optional configuration for Boleto\n\t\t\tpersonalDetailsRequired: true, //turn personalDetails section on/off\n\t\t\tbillingAddressRequired: true, // turn billingAddress section on/off\n\t\t\tshowEmailAddress: true, // allow shopper to specify their email address\n\n\t\t\t// Optionally pre-fill some fields, here all fields are filled:\n\t\t\tdata: {\n\t\t\t\tsocialSecurityNumber: '56861752509',\n\t\t\t\tshopperName: {\n\t\t\t\t\tfirstName: 'José',\n\t\t\t\t\tlastName: 'Silva'\n\t\t\t\t},\n\t\t\t\tbillingAddress: {\n\t\t\t\t\tstreet: 'Rua Funcionarios',\n\t\t\t\t\thouseNumberOrName: '952',\n\t\t\t\t\tcity: 'São Paulo',\n\t\t\t\t\tpostalCode: '04386040',\n\t\t\t\t\tstateOrProvince: 'SP',\n\t\t\t\t\tcountry: 'BR'\n\t\t\t\t},\n\t\t\t\tshopperEmail: 'reuel@pronamic.nl'\n\t\t\t}\n\t\t}\n\t},\n\tonSubmit: ( state, dropin ) => {\n\t\t// Your function calling your server to make the `/payments` request.\n\t\tmakePayment( state.data )\n\t\t\t.then( response => {\n\t\t\t\tconsole.log( response );\n\n\t\t\t\t// Handle errors.\n\t\t\t\tif ( typeof response.error !== 'undefined' ) {\n\t\t\t\t\talert( response.error );\n\t\t\t\t\t//dropin.setStatus( 'error', { message: response.error } );\n\n\t\t\t\t\t//setTimeout( function() { dropin.setStatus( 'ready' ); }, 5000 );\n\t\t\t\t}\n\n\t\t\t\t// Drop-in handles the action object from the `/payments` response.\n\t\t\t\tif ( typeof response.action !== 'undefined' ) {\n\t\t\t\t\tdropin.handleAction( response.action );\n\t\t\t\t}\n\n\t\t\t\t// Handle result codes.\n\t\t\t\tif ( typeof response.resultCode !== 'undefined' ) {\n\t\t\t\t\tswitch ( response.resultCode ) {\n\t\t\t\t\t\tcase 'Authorised' :\n\t\t\t\t\t\t\tdropin.setStatus( 'success', { message: 'Payment completed successfully.' } );\n\n\t\t\t\t\t\t\t// @todo redirect to payment complete status page.\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Received' :\n\t\t\t\t\t\t\tdropin.setStatus( 'success', { message: 'The order has been received and we are waiting for the payment to clear.' } );\n\n\t\t\t\t\t\t\t// @todo redirect to payment pending status page.\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn response;\n\t\t\t} )\n\t\t\t.catch( error => {\n\t\t\t\tthrow Error( error );\n\t\t\t} );\n\t},\n\tonAdditionalDetails: ( state, dropin ) => {\n\t\tmakeDetailsCall( state.data )\n\t\t\t// Your function calling your server to make a /payments/details request\n\t\t\t.then( action => {\n\t\t\t\tdropin.handleAction( action );\n\t\t\t\t// Drop-in handles the action object from the /payments/details response\n\t\t\t} )\n\t\t\t.catch( error => {\n\t\t\t\tthrow Error( error );\n\t\t\t} );\n\t}\n} )\n.mount( '#pronamic-pay-adyen-drop-in' );\n\nasync function makePayment ( data ) {\n\tconsole.log( data );\n\n\tconst response = await fetch(\n\t\tpronamicPayAdyenCheckout.paymentsUrl,\n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\tcache: 'no-cache',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify( data )\n\t\t}\n\t);\n\n\treturn await response.json();\n}\n"],"file":"checkout-drop-in.js"}